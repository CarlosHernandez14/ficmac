generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  Int                   @id @default(autoincrement())
  correo              String                @unique
  contrasena          String
  rol                 Int
  fecha_registro      DateTime              @default(now()) @db.Date
  Donacion            Donacion[]
  Paciente            Paciente[]
  Medico              Medico[]
  Post                Post[]
  Voto                Voto[]
  Solicitud_Estudio   Solicitud_Estudio[]
  solicitud_resultado solicitud_resultado[]
}

model Donacion {
  id        Int      @id @default(autoincrement())
  idUsuario Int
  cantidad  Float
  fecha     DateTime @default(now()) @db.Date
  usuario   Usuario  @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario")

  @@index([idUsuario], name: "fk_usuario_inx")
}

model Paciente {
  id              Int     @id @default(autoincrement())
  nombre_completo String
  idUsuario       Int
  sexo            String
  num_celular     String
  imagen_path     String
  usuario         Usuario @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_paciente")

  @@index([idUsuario], name: "fk_usuario_paciente_inx")
}

model Medico {
  id                     Int                      @id @default(autoincrement())
  nombre_completo        String
  idUsuario              Int
  rfc                    String
  matricula              String
  num_celular            String
  especialidad           String
  usuario                Usuario                  @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_medico")
  Publicacion_Cientifica Publicacion_Cientifica[]

  @@index([idUsuario], name: "fk_usuario_medico_inx")
}

model Publicacion_Cientifica {
  id              Int      @id @default(autoincrement())
  idUsuario       Int
  titulo          String
  resumen         String
  fecha_publicado DateTime @db.Date
  link            String
  usuario         Medico   @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_publicacion")

  @@index([idUsuario], name: "fk_usuario_publicacion_inx")
}

model Pregunta_Frecuente {
  id        Int    @id @default(autoincrement())
  pregunta  String
  respuesta String
}

model Sintoma {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  descripcion         String
  Tipo_Cancer_Sintoma Tipo_Cancer_Sintoma[]
}

model Tipo_Cancer {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  descripcion         String
  path_imagen         String
  Tipo_Cancer_Sintoma Tipo_Cancer_Sintoma[]
  Post                Post[]
  solicitud_resultado solicitud_resultado[]
}

model Tipo_Cancer_Sintoma {
  id           Int         @id @default(autoincrement())
  idSintoma    Int         @map("id_sintoma")
  idTipoCancer Int         @map("id_tipo_cancer")
  Sintoma      Sintoma     @relation(fields: [idSintoma], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_sintoma")
  Tipo_Cancer  Tipo_Cancer @relation(fields: [idTipoCancer], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_tipo_cancer")

  @@index([idSintoma], name: "fk_sintoma_inx")
  @@index([idTipoCancer], name: "fk_tipo_cancer_inx")
}

model Post {
  id           Int         @id @default(autoincrement())
  titulo       String
  cuerpo       String
  fecha        DateTime    @default(now())
  idUsuario    Int
  idPostPadre  Int?
  idTipoCancer Int
  usuario      Usuario     @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_post")
  Post         Post?       @relation("PostToPost", fields: [idPostPadre], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_post_padre")
  Tipo_Cancer  Tipo_Cancer @relation(fields: [idTipoCancer], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_tipo_cancer_post")
  PostHijos    Post[]      @relation("PostToPost")
  Voto         Voto[]

  @@index([idUsuario], name: "fk_usuario_post_inx")
  @@index([idPostPadre], name: "fk_post_padre_inx")
  @@index([idTipoCancer], name: "fk_tipo_cancer_post_inx")
}

model Voto {
  id        Int      @id @default(autoincrement())
  fecha     DateTime @default(now())
  idUsuario Int
  idPost    Int
  usuario   Usuario  @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_voto")
  post      Post     @relation(fields: [idPost], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_post_voto")

  @@index([idUsuario], name: "fk_usuario_voto_inx")
  @@index([idPost], name: "fk_post_voto_inx")
}

model Estudio {
  id                Int                 @id @default(autoincrement())
  nombre            String
  descripcion       String
  tipo              Int
  precio            Float
  Solicitud_Estudio Solicitud_Estudio[]
}

model Solicitud_Estudio {
  id                     Int                   @id @default(autoincrement())
  idPaciente             Int
  idEstudio              Int
  path_orden_medica      String
  path_identificacion    String
  path_concentimiento    String
  path_voucher           String
  path_historia_clinica  String
  path_informe_patologia String
  fecha_solicitud        DateTime              @default(now())
  usuario                Usuario               @relation(fields: [idPaciente], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_solicitud")
  estudio                Estudio               @relation(fields: [idEstudio], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_estudio_solicitud")
  solicitud_resultado    solicitud_resultado[]

  @@index([idPaciente], name: "fk_usuario_solicitud_inx")
  @@index([idEstudio], name: "fk_estudio_solicitud_inx")
}

model solicitud_resultado {
  id                 Int               @id @default(autoincrement())
  idMedico           Int
  idTipoCancer       Int
  prueba             String
  biopsia_remitida   String
  path_firma_sello   String
  cedula             String
  especialidad       String
  idSolicitudEstudio Int
  usuario            Usuario           @relation(fields: [idMedico], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_usuario_solicitud_resultado")
  tipo_cancer        Tipo_Cancer       @relation(fields: [idTipoCancer], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_tipo_cancer_solicitud_resultado")
  solicitud_estudio  Solicitud_Estudio @relation(fields: [idSolicitudEstudio], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_solicitud_estudio_solicitud_resultado")

  @@index([idMedico], name: "fk_usuario_solicitud_resultado_inx")
  @@index([idTipoCancer], name: "fk_tipo_cancer_solicitud_resultado_inx")
  @@index([idSolicitudEstudio], name: "fk_solicitud_estudio_solicitud_resultado_inx")
}
